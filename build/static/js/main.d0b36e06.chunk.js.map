{"version":3,"sources":["assets/header.svg","assets/wikipedia.svg","assets/google.svg","assets/link.svg","Elements.js","Components/Other.js","Components/Header.js","Components/Links.js","Components/Airport.js","Main.js","index.js"],"names":["module","exports","__webpack_require__","p","App","styled","main","_templateObject","H1","h1","_templateObject2","Subtitle","span","_templateObject3","Text","_templateObject4","Button","button","_templateObject5","Section","section","_templateObject6","List","div","_templateObject7","Maps","img","_templateObject8","Link","_templateObject9","Other","_ref","airports","onClick","react_default","a","createElement","style","gridColumn","padding","map","distance","_rankingInfo","geoDistance","toFixed","key","id","latitude","_geoloc","lat","longitude","lng","name","AutocompleteStyles","fontSize","position","margin","marginTop","background","border","color","borderBottom","paddingLeft","TryComplete","onSelect","component","Promise","resolve","then","t","bind","_ref2","Autocomplete","placeholder","onPlaceSelected","catch","err","Header","_ref3","Fragment","Header_TryComplete","place","geometry","location","src","header","width","alt","Links","airport","target","rel","href","wikipedia_link","wikipedia","home_link","link","concat","google","Airport","iata_code","municipality","index_es","code","iso_country","svg","index","algoliasearch","initIndex","Main","_useCurrentPosition","useCurrentPosition","Object","slicedToArray","_useState","useState","_useState2","setAirports","_useState3","_useState4","coords","setCoords","getData","asyncToGenerator","regenerator_default","mark","_callee","coordinates","hits","wrap","_context","prev","next","search","aroundLatLng","getRankingInfo","hitsPerPage","facetFilters","sent","abrupt","stop","apply","this","arguments","useEffect","closest","other","Global","createGlobalStyle","src_templateObject","reset","rootElement","document","getElementById","ReactDOM","render","src_Main"],"mappings":"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","file":"static/js/main.d0b36e06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.2487b98d.svg\";","module.exports = __webpack_public_path__ + \"static/media/wikipedia.1af657e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.c0d44f1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.41970fdc.svg\";","import styled from 'styled-components'\n\nexport const App = styled.main`\n  width: 350px;\n  margin: auto;\n  margin-top: 50px;\n  background: #ffffff;\n  box-shadow: -2px 7px 7px rgba(0, 0, 0, 0.1);\n`\n\nexport const H1 = styled.h1`\n  font-size: 19.33px;\n  color: #ffffff;\n  text-shadow: 0 5px 19px rgba(0, 0, 0, 0.27);\n  position: absolute;\n  margin: 46px 23px;\n  max-width: 150px;\n  text-transform: uppercase;\n`\n\nexport const Subtitle = styled.span`\n  font-size: 13px;\n  color: #cdcdcd;\n  line-height: 13px;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  display: block;\n`\n\nexport const Text = styled.p`\n  font-size: 16px;\n  color: #545454;\n  line-height: 24px;\n\n  a {\n    color: #545454;\n  }\n`\n\nexport const Button = styled.button`\n  font-size: 16px;\n  color: #545454;\n  line-height: 24px;\n  appearance: none;\n  background: transparent;\n  border: none;\n  text-align: left;\n  padding: 0;\n  text-decoration: underline;\n`\n\nexport const Section = styled.section`\n  padding: 20px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n`\n\nexport const List = styled.div`\n  display: flex;\n  align-items: center;\n\n  a {\n    margin-right: 5px;\n  }\n`\n\nexport const Maps = styled.img`\n  margin-top: -7px;\n  display: block;\n`\n\nexport const Link = styled.img`\n  height: 18px;\n  margin-top: -5px;\n  display: block;\n`\n","import React from 'react'\nimport { Subtitle, Section, Text, Button } from '../Elements'\n\nexport default ({ airports, onClick }) => {\n  return (\n    <div style={{ gridColumn: '1 / 3' }}>\n      <Subtitle>Other close airports</Subtitle>\n      <Section style={{ padding: 0 }}>\n        {airports.map(a => {\n          const distance = (a._rankingInfo.geoDistance / 1000).toFixed(1)\n          return (\n            <Text key={a.id}>\n              <Button\n                onClick={() =>\n                  onClick({\n                    latitude: a._geoloc.lat,\n                    longitude: a._geoloc.lng\n                  })\n                }\n              >\n                {a.name} ({distance}km){' '}\n              </Button>\n            </Text>\n          )\n        })}\n      </Section>\n    </div>\n  )\n}\n","import React from 'react'\nimport Autocomplete from 'react-google-autocomplete'\nimport { H1 } from '../Elements'\nimport header from '../assets/header.svg'\n\nconst AutocompleteStyles = {\n  fontSize: '16px',\n  position: 'absolute',\n  margin: '46px 23px',\n  marginTop: '100px',\n  padding: '10px 13px',\n  background: 'transparent',\n  border: '0',\n  color: 'white',\n  borderBottom: '2px solid white',\n  paddingLeft: '0'\n}\n\nconst TryComplete = ({ onSelect }) => {\n  let component = null\n  import('react-google-autocomplete')\n    .then(({ Autocomplete }) => {\n      component = (\n        <Autocomplete\n          style={AutocompleteStyles}\n          placeholder=\"Set Your Location\"\n          onPlaceSelected={onSelect}\n        />\n      )\n    })\n    .catch(err => {\n      component = null\n    })\n\n  return component\n}\n\nexport default ({ onSelect }) => {\n  return (\n    <>\n      <H1> Your closest airport</H1>\n      <TryComplete\n        onSelect={place =>\n          onSelect({\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng()\n          })\n        }\n      />\n      <img src={header} width=\"100%\" alt=\"Landscape of city\" />\n    </>\n  )\n}\n","import React from 'react'\nimport wikipedia from '../assets/wikipedia.svg'\nimport google from '../assets/google.svg'\nimport link from '../assets/link.svg'\nimport { Subtitle, Text, List, Link, Maps } from '../Elements'\n\nexport default ({ airport }) => (\n  <div>\n    <Subtitle>Links</Subtitle>\n    <Text>\n      <List>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={airport.wikipedia_link}\n        >\n          <img width=\"24\" src={wikipedia} alt=\"Wikipedia logo \" />\n        </a>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={airport.home_link}>\n          <Link width=\"24\" src={link} alt=\"Website\" />\n        </a>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`https://www.google.com/maps/search/?api=1&query=${\n            airport._geoloc.lat\n          },${airport._geoloc.lng}`}\n        >\n          <Maps width=\"21\" src={google} alt=\"Google logo\" />\n        </a>\n      </List>\n    </Text>\n  </div>\n)\n","import React from 'react'\nimport ReactCountryFlag from 'react-country-flag'\nimport { Subtitle, Text } from '../Elements'\n\nexport default ({ airport }) => (\n  <>\n    <div>\n      <Subtitle>Name</Subtitle>\n      <Text>{airport.name}</Text>\n    </div>\n    <div>\n      <Subtitle>Code</Subtitle>\n      <Text>{airport.iata_code}</Text>\n    </div>\n    <div>\n      <Subtitle>Location</Subtitle>\n      <Text>\n        {airport.municipality} -{' '}\n        <ReactCountryFlag code={airport.iso_country} svg />\n      </Text>\n    </div>\n    <div>\n      <Subtitle>Distance</Subtitle>\n      <Text>{(airport._rankingInfo.geoDistance / 1000).toFixed(1)}km</Text>\n    </div>\n  </>\n)\n","import React, { useEffect, useState } from 'react'\nimport { useCurrentPosition } from 'react-use-geolocation'\nimport algoliasearch from 'algoliasearch'\n\nimport Other from './Components/Other'\nimport Header from './Components/Header'\nimport Links from './Components/Links'\nimport Airport from './Components/Airport'\nimport { Subtitle, Section, App } from './Elements'\n\nconst client = algoliasearch('A8JDD1DDSB', '06c4bcc6e1b48e0fa133cc97f1180be4')\n\nconst index = client.initIndex('all_airports')\n\nconst Main = () => {\n  const [position] = useCurrentPosition()\n  const [airports, setAirports] = useState([])\n  const [coords, setCoords] = useState(null)\n\n  const getData = async () => {\n    const coordinates = coords || position.coords\n    const { hits } = await index.search({\n      aroundLatLng: `${coordinates.latitude}, ${coordinates.longitude}`,\n      getRankingInfo: true,\n      hitsPerPage: 3,\n      facetFilters: ['scheduled_service:yes']\n    })\n\n    return hits\n  }\n  useEffect(() => {\n    if (position) getData().then(setAirports)\n  }, [position, coords])\n\n  const closest = airports[0]\n  const other = [airports[1], airports[2]]\n  return (\n    <App>\n      <Header onSelect={setCoords} />\n      <Section>\n        {airports[0] ? (\n          <>\n            <Airport airport={closest} />\n            <Links airport={closest} />\n            <Other airports={other} onClick={setCoords} />\n          </>\n        ) : (\n          <Subtitle>Getting your location</Subtitle>\n        )}\n      </Section>\n    </App>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport reset from 'reset.css'\nimport Main from './Main'\n\nconst Global = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,700');\n  ${reset}\n\n    body {\n      background: #F6F6F6;\n      font-family: 'Roboto', sans-serif;\n      font-size: 16px;\n      color: #545454;\n      line-height: 1.2;\n    }\n    ::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n      color: rgba(255,255, 255, 0.7);\n    }\n    ::-moz-placeholder { /* Firefox 19+ */\n      color: rgba(255,255, 255, 0.7);\n    }\n    :-ms-input-placeholder { /* IE 10+ */\n      color: rgba(255,255, 255, 0.7);\n    }\n    :-moz-placeholder { /* Firefox 18- */\n      color: rgba(255,255, 255, 0.7);\n    }\n`\n\nfunction App() {\n  return (\n    <>\n      <Main />\n      <Global />\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}